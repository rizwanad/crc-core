version: 2.1

orbs:
  sam: circleci/aws-sam-serverless@3.2.0

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure frontend infrastucture exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=crc-core \
              --stack-name "crc-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
  deploy-backend:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - sam/install
      - sam/build:
          base-dir: .
          debug: true
          template: .circleci/files/backend.yml
      - sam/deploy:
          stack-name: crc-backend-${CIRCLE_WORKFLOW_ID:0:7}
  deploy-frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -sL https://rpm.nodesource.com/setup_13.x | bash -
            yum -y install nodejs
            yum -y install tar gzip
            cd frontend && npm install
      - run:
          name: Get backend api gateway url
          command: |
            export BACKEND_API_URL=$(aws cloudformation describe-stacks \
              --stack-name crc-backend-${CIRCLE_WORKFLOW_ID:0:7} | jq -r '.Stacks[].Outputs[] | select(.OutputKey=="HttpApiUrl") | .OutputValue')
            
            echo "API_URL = ${BACKEND_API_URL}"
            echo API_URL="${BACKEND_API_URL}" >> frontend/.env
            cat frontend/.env
      - run:
          name: Deploy frontend objects
          command: |
            cd frontend
            npm install
            npm run build
            tar -czvf artifact-"${CIRCLE_WORKFLOW_ID:0:7}".tar.gz build
            aws s3 cp build s3://crc-frontend-${CIRCLE_WORKFLOW_ID:0:7} --recursive

workflows:
  default:
    jobs:
      # - build-frontend
      # - deploy-infrastructure:
      #     requires: [build-frontend]
      - deploy-backend
          # requires: [deploy-infrastructure]
      # - deploy-frontend:
          # requires: [deploy-backend]